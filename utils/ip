#!/bin/bash

# tag_check,state_check
source utils/check

# $1 TAGS
# $2 State(default running)
# $3 Count(default 1)
# -q Quiet Option
# Receive TAG, and return IP Addresses(IP_ADDRESSES)
function get_ip_from_tag(){
	local OPTIND OPT
	while getopts ":q" OPT; do
		case $OPT in
		q)
			QUIET=" >/dev/null 2>&1"
			;;
		\?)
			;;
		esac
	done
	shift $((OPTIND-1))
	tag_check $1
	state_check $2

	PICK_COUNT=$3

	IP_ADDRESSES=$(
                aws ec2 describe-instances | \
                jq -r ".Reservations[].Instances | \
                select(.[].State.Name == \"$2\") | \
		sort_by(.LaunchTime) | reverse | \
                select(.[].Tags != null) | \
                select(.[].Tags[].Key == \"$KEY\") | \
                select(.[].Tags[].Value == \"$VALUE\") | \
                .[].PublicIpAddress"
        )
	if [ -n "$PICK_COUNT" ]; then
		IP_ADDRESS=$(echo IP_ADDRESSES | cut -d' ' -f1-$((PICK_COUNT+1)))
	fi
        if [ -z "$IP_ADDRESSES" ] && [ $IP_ADDRESSES="null" ]; then
                eval echo "TAG\(\"$1\"\) No Instance" $QUIET
		# Check have no tag instance
		NO_TAG_INSTANCES=$(aws ec2 describe-instances | jq -r ".Reservations[].Instances | select(.[].Tag == null) | .[].InstanceId")
		if [ -n "$NO_TAG_INSTANCE" ]; then
			echo "WARNING: You have No Tag Instances!!!"
			for INSTANCE in $NO_TAG_INSTANCES; do
				echo "$INSTANCE"
			done
		fi
        else
                eval echo "TAG\(\"$1\"\) IpAddresses:" $QUIET
		eval echo "LATEST" $QUIET
		eval echo "=====================" $QUIET
                echo "$IP_ADDRESSES"
		eval echo "=====================" $QUIET
		eval echo "OLDEST" $QUIET
        fi
}
